name: Integration & Slow Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # 毎日 03:00 UTC

concurrency:
  group: integration-slow-${{ github.ref }}
  cancel-in-progress: false

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      START_STREAMLIT: "false"
      START_WEBSOCKET: "true"
      START_MCP: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements_optimized.txt

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel setuptools
          python -m pip install -r requirements.txt

      - name: (Optional) Start Streamlit app
        if: env.START_STREAMLIT == 'true'
        run: |
          nohup python -m streamlit run app.py --server.headless true --server.port 8501 > streamlit_ci.log 2>&1 &
          echo $! > streamlit.pid

      - name: (Optional) Wait for Streamlit
        if: env.START_STREAMLIT == 'true'
        run: |
          for i in {1..120}; do
            if curl -fsS http://localhost:8501 >/dev/null 2>&1; then echo READY; exit 0; fi; sleep 1; done;
          echo "Streamlit did not start"; tail -n 200 streamlit_ci.log || true; exit 1

      - name: (Optional) Start WebSocket server
        if: env.START_WEBSOCKET == 'true'
        run: |
          nohup python websocket_server.py > websocket_ci.log 2>&1 &
          echo $! > websocket.pid

      - name: (Optional) Wait for WebSocket port
        if: env.START_WEBSOCKET == 'true'
        run: |
          python - <<'PY'
import socket, time, sys
host, port = '127.0.0.1', 8765
for _ in range(120):
    try:
        with socket.create_connection((host, port), timeout=1):
            print('WebSocket port is open')
            sys.exit(0)
    except Exception:
        time.sleep(1)
print('WebSocket server not ready in time')
sys.exit(1)
PY

      - name: (Optional) Start MCP Browser Server
        if: env.START_MCP == 'true'
        run: |
          nohup python start_mcp_server.py > mcp_ci.log 2>&1 &
          echo $! > mcp.pid

      - name: (Optional) Warm up
        run: sleep 3

      - name: Run integration/slow tests (no Playwright)
        env:
          PYTHONDONTWRITEBYTECODE: 1
        run: |
          python -m pytest -m "(integration or slow) and not playwright" -q --maxfail=1 --disable-warnings --junitxml=test-results/junit.xml || exit 1

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-slow-junit
          path: test-results
          if-no-files-found: ignore
